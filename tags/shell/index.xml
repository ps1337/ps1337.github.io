<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>shell on BananaMafia</title>
    <link>https://bananamafia.dev/tags/shell/</link>
    <description>Recent content in shell on BananaMafia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 May 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://bananamafia.dev/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dotfiles</title>
      <link>https://bananamafia.dev/project/dotfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/project/dotfiles/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Methods to Upgrade nc Reverse Shells</title>
      <link>https://bananamafia.dev/post/shell-upgrade/</link>
      <pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/shell-upgrade/</guid>
      <description>Ended up with a cheap nc shell and want to upgrade to a &amp;ldquo;real&amp;rdquo; shell with a proper TTY and navigation?
Say no more &amp;lt;:
1. Upgrading using shell magic This doesn&amp;rsquo;t always work - however if Python is present on the victims machine, it&amp;rsquo;s worth a try.
 Use bash on the attacker machine, zsh doesn&amp;rsquo;t seem to work. Get the nc shell. In the shell, execute:  python -c &amp;#39;import pty; pty.</description>
    </item>
    
    <item>
      <title>Random Note #12354123: Easy Remote Pair Programming Using Docker and Tmux</title>
      <link>https://bananamafia.dev/post/pairprog/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/pairprog/</guid>
      <description>Recently I&amp;rsquo;ve created a small docker container to perform remote pair programming. Shared shell sessions are an easy way to remotely interact with coworkers or other people. With additional docker magic you now don&amp;rsquo;t even have to give them access to your host system - they will be contained just like you and the work that&amp;rsquo;s being done. Using my docker image, it&amp;rsquo;s possible to share a tmux session with a group of people.</description>
    </item>
    
    <item>
      <title>Automated and Tested Dotfile Deployment Using Ansible and Docker</title>
      <link>https://bananamafia.dev/post/dotfile-deployment/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/dotfile-deployment/</guid>
      <description>This is the second part of my posts about Dotfile management. Part one can be found here.
After spending a lot of time and effort on your Dotfiles, it may be useful to setup an automated deployment process. There are existing solutions like GNU Stow, but for maximum flexibility the use of Ansible may be a better option. Using this, files and advanced configuration hierarchies can be distributed easily. This post covers my personal setup, which also includes an automated deployment test approach for multiple linux distributions.</description>
    </item>
    
    <item>
      <title>Using Shellcheck and Docker to Automatically Lint Dotfiles</title>
      <link>https://bananamafia.dev/post/dotfile-shellcheck/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/dotfile-shellcheck/</guid>
      <description>In order to prevent errors and side effects, it&amp;rsquo;s useful to use Shellcheck to lint all shell scripts. While checking out the Dotfiles of jessfraz, I came across an easy way to integrate this kind of check with Travis CI. The mentioned approach triggers a travis linting process after pushing to to the Dotfiles repository on GitHub. This post will explain all necessary steps to integrate this process into your own repository.</description>
    </item>
    
    <item>
      <title>Universal Notifications Using Telegram and cURL</title>
      <link>https://bananamafia.dev/post/telegram-notifications/</link>
      <pubDate>Wed, 07 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/telegram-notifications/</guid>
      <description>If you ever wanted to get notified when certain things happen but didn&amp;rsquo;t find a lightweight solution &amp;ndash; here comes captain Telegram.
Using a simple Telegram bot, it&amp;rsquo;s possible to send notifications to your mobile phone or browser. All the notifier node needs is curl installed.
Registering a bot First of all, a Telegram bot has to be registered in order to send messages later on. Follow these steps to get started:</description>
    </item>
    
  </channel>
</rss>