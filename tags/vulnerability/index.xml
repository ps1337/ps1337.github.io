<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vulnerability on BananaMafia</title>
    <link>https://bananamafia.dev/tags/vulnerability/</link>
    <description>Recent content in vulnerability on BananaMafia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 06 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://bananamafia.dev/tags/vulnerability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analysis of Satisfyer Toys: Discovering an Authentication Bypass with r2 and Frida</title>
      <link>https://bananamafia.dev/post/satisfyer/</link>
      <pubDate>Tue, 06 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/satisfyer/</guid>
      <description>There&amp;rsquo;s no good way to start a blog post like this, so let&amp;rsquo;s dive right in:
Recently, I&amp;rsquo;ve re-discovered the butthax talk which covered security aspects of Lovense devices. I&amp;rsquo;ve felt so inspired, that I&amp;rsquo;ve decided to buy some Satisfyer devices and check out how they work.
These are app-controllable toys that are sold globally, first and foremost in Germany and all over the EU. They have some pretty interesting functionality:</description>
    </item>
    
    <item>
      <title>Command Injection in LaTeX Workshop</title>
      <link>https://bananamafia.dev/post/tex/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/tex/</guid>
      <description>Welcome to another round of Banana tweets and unintentionally makes people mad.
I&amp;rsquo;ve had a look at some VS Code extensions that make use of shell commands with the goal to find a command injection vulnerability. For this, I&amp;rsquo;ve grepped for child_process, since this is a NodeJS API that&amp;rsquo;s commonly used to execute shell commands in VS Code.
I&amp;rsquo;ve quickly found various extensions that make use of this API. A vulnerability exists in case:</description>
    </item>
    
    <item>
      <title>Haxxoring a Hisense Smart TV</title>
      <link>https://bananamafia.dev/post/hisensehax/</link>
      <pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/hisensehax/</guid>
      <description>Instead of watching The Bachelor, I&amp;rsquo;ve decided to take a look at the security of my Hisense smart TV. I&amp;rsquo;ve found a way to read arbitrary files from the file system. Also, (over)writing specific files, as well as installing malicious HTML5 applications was found to be possible. All of that can be performed from the web browser, using the custom JavaScript API that was implemented by the vendor.
You can find some PoCs at the end of this blog post.</description>
    </item>
    
    <item>
      <title>Open Redirects In State Parameters</title>
      <link>https://bananamafia.dev/post/openredirect/</link>
      <pubDate>Tue, 17 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/openredirect/</guid>
      <description>Now that the deadline to fix this vulnerability has passed, I&amp;rsquo;ve decided to publish this blog post that covers a web vulnerability I&amp;rsquo;ve found in the login mechanism of a particular company.
Everything started when I had a look at a more complex part of a public web application of this vendor. The web application that gives out a link to the user that can be used to open up the same user state again at a later point.</description>
    </item>
    
    <item>
      <title>r2con 2019 PwnDebian Challenge: Exploiting radare2 (CVE-2019-14745, CVE-2019-16718)</title>
      <link>https://bananamafia.dev/post/r2-pwndebian/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/r2-pwndebian/</guid>
      <description>Hello hello!
Everyone knows: This years r2con, the conference about radare2, has a very special challenge &amp;ndash; PwnDebian:
The almighty blenk92 and me decided to assist the radare2 project in finding such an exploit an we think we were quite successful :)
But first some basics for r2.
Shelling Out Via The r2 Shell While running r2, it&amp;rsquo;s possible to shell out and execute shell commands without leaving the r2 console:</description>
    </item>
    
    <item>
      <title>Information Leak in Docker</title>
      <link>https://bananamafia.dev/post/docker-leak/</link>
      <pubDate>Fri, 04 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/docker-leak/</guid>
      <description>During an assessment of the Docker platform in November 2018, two information leaks regarding the /proc/asound path were discovered in the OCI (Open Container Initiative) specification. These issues have been fixed quickly by the Docker security team using the provided suggestions.
Leak of audio device status of the host When media is being played on the host, the
/proc/asound/card*/pcm*p/sub*/status files may contain information regarding the status of media playback. Consider this command for a demonstration:</description>
    </item>
    
  </channel>
</rss>
