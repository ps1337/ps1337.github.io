<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dotnet on BananaMafia</title>
    <link>https://bananamafia.dev/tags/dotnet/</link>
    <description>Recent content in dotnet on BananaMafia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 27 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://bananamafia.dev/tags/dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Reinschauer: Remotely Controlling Windows Machines</title>
      <link>https://bananamafia.dev/post/reinschauer/</link>
      <pubDate>Tue, 27 Sep 2022 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/reinschauer/</guid>
      <description>Recently, I did some research on Hidden VNCs (HVNC). This is a neat feature for attackers to have, since it allows to remotely control a compromised system on a new and separate virtual desktop that is not visible to the victim. This way, it is possible to remotely launch and use GUI programs without generating any visual indicators for victims.
Implementing HVNC is complicated. First of all, you need to be able to grab the screen contents of the hidden desktop.</description>
    </item>
    
    <item>
      <title>Reversing .NET Applications: CCCamp19 CTF CampRE Challenge</title>
      <link>https://bananamafia.dev/post/dotnet-re-cccamp19/</link>
      <pubDate>Sun, 25 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://bananamafia.dev/post/dotnet-re-cccamp19/</guid>
      <description>Finally a nice .NET CTF challenge - time to pull out dnSpy :)
The provided ZIP includes a CampRE.dll file which, according to the challenge description, is a .NET Core application. Time to boot a Windows VM and install the .NET Core runtime environment.
After decompiling the dll, this source code can be inspected:
private static void Main(string[] args) { byte[] sourceArray = File.ReadAllBytes(Assembly.GetAssembly(typeof(Program)).Location); for (int i = 0; i &amp;lt; 1333337; i++) { MD5 md = MD5.</description>
    </item>
    
  </channel>
</rss>
